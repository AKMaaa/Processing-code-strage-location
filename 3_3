PFont font;
int k=0;
color [][] cf=new color [700][700];
void setup() {
  size(700, 700);
  font=createFont("DialogInput.plain", 30);
  textFont(font);
  background(#FFE8F8);
  float step=100;
  for (int nn=0; nn<100000; nn+=1) {
    stroke(255, (int)random(255, 160), (int)random(220, 255));
    strokeWeight(1);
    point((int)random(width), (int)random(height));
    stroke(240, (int)random(0, 100), (int)random(50, 100), 10);
    strokeWeight(1);
    point((int)random(width), (int)random(height));
  }
  for (float y=100; y<height-100; y+=step) {
    for (float x=100; x<width-100; x+=step) {
      k=(int)random(1, 6);
      if ((!(x==200&&y==100))&&!(x==400&&y==200)&&!(x==300&&y==300)&&!(x==400&&y==400)) {//&&(x!=400&&y!=200)&&(x!=300&&y!=300)&&(x!=400&&y!=400)
        if (k==1) {
          hishi(x, y);
        } else if (k==2) {
          dango3(x, y);
        } else if (k==3) {
          gara(x, y);
        } else if (k==4) {
          momo(x, y);
        } else if (k==5) {
          arare(x, y);
        }
      }
    }
  }
  tetex(220, 170);
  for (int y=0; y<height; y++) {
    for (int x=0; x<width; x++) {
      cf[x][y]=get(x, y);
    }
  }
}

void draw() {
}

//ひしもち、三色団子、桜、男、女

void dango3(float x, float y) {
  stroke(0);
  strokeWeight(1);

  push();
  translate(x+64+10, y+67+8);
  rotate(-PI/4);
  fill(#F2E5C9);
  rect(0, 0, 5, 20);
  pop();//串

  fill(#F5A1D3);//ピンク
  ellipse(x+29, y+29, 30, 30);
  fill(#FFFEF7);//白
  ellipse(x+48, y+48, 30, 30);
  fill(#9ED393);//緑
  ellipse(x+67, y+67, 30, 30);//団子

  for (int n=0; n<1000; n+=1) {
    stroke(255, random(20));
    strokeWeight(random(10));
    point(random(x+10, x+90), random(y+10, y+90));
  }
}

void hishi(float x, float y) {
  beginShape();
  fill(#F5A1D3);//ピンク
  stroke(0);
  strokeWeight(1);
  vertex(x+50, y+10);
  vertex(x+10, y+30);
  vertex(x+50, y+50);
  vertex(x+90, y+30);
  vertex(x+50, y+10);
  endShape();


  beginShape();
  fill(#F5A1D3);//ピンク
  stroke(0);
  strokeWeight(1);
  vertex(x+10, y+30);
  vertex(x+10, y+40/3+30);
  vertex(x+50, y+40/3+50);
  vertex(x+50, y+50);
  vertex(x+10, y+30);
  endShape();

  beginShape();
  fill(#F5A1D3);//ピンク
  stroke(0);
  strokeWeight(1);
  vertex(x+50, y+50);
  vertex(x+50, y+50+40/3);
  vertex(x+90, y+30+40/3);
  vertex(x+90, y+30);
  vertex(x+50, y+50);
  endShape();


  beginShape();
  fill(#FFFEF7);//白
  stroke(0);
  strokeWeight(1);
  vertex(x+10, y+30+40/3);
  vertex(x+10, y+40/3+30+40/3);
  vertex(x+50, y+40/3+50+40/3);
  vertex(x+50, y+50+40/3);
  endShape();

  beginShape();
  fill(#FFFEF7);//白
  stroke(0);
  strokeWeight(1);
  vertex(x+50, y+50+40/3);
  vertex(x+50, y+50+40/3+40/3);
  vertex(x+90, y+30+40/3+40/3);
  vertex(x+90, y+30+40/3);
  endShape();

  beginShape();
  fill(#9ED393);//緑
  stroke(0);
  strokeWeight(1);
  vertex(x+10, y+30+40/3+40/3);
  vertex(x+10, y+40/3+30+40/3+40/3);
  vertex(x+50, y+40/3+50+40/3+40/3);
  vertex(x+50, y+50+40/3+40/3);
  vertex(x+10, y+30+40/3+40/3);
  endShape();

  beginShape();
  fill(#9ED393);//緑
  stroke(0);
  strokeWeight(1);
  vertex(x+50, y+50+40/3+40/3);
  vertex(x+50, y+50+40/3+40/3+40/3);
  vertex(x+90, y+30+40/3+40/3+40/3);
  vertex(x+90, y+30+40/3+40/3);
  vertex(x+50, y+50+40/3+40/3);
  endShape();

  for (int n=0; n<1000; n+=1) {
    stroke(255, random(50, 100));
    strokeWeight(random(2));
    point(random(x+10, x+90), random(y+10, y+90));
  }
}

void gara(float x, float y) {
  fill(#B3E0BA);
  stroke(0);
  strokeWeight(1);

  for (float r=0; r<TAU; r+=PI/3) {
    push();
    translate(x+50, y+50);
    rotate(r);
    beginShape();
    vertex(0, -40);
    vertex(11.9/pow(3, 1/2), -20);
    vertex(0, 0);
    vertex(-11.9/pow(3, 1/2), -20);
    vertex(0, -40);
    endShape();
    line(0, 0, 0, -40);
    pop();
  }
}
float noi_n=0;
float a=0;
void arare(float x, float y) {
  strokeWeight(0.2);
  stroke(0);
  push();
  translate(x+50, y+50);
  fill(#B48457);
  ellipse(10, 0, 40, 40);
  fill(#FCDEB8);
  beginShape();
  for (float r=PI/180; r<=TAU; r+=PI/180) {
    noi_n=abs(noise(a*0.009, r*0.05)*1.2);
    vertex(30*cos(r)*noi_n, 30*sin(r)*noi_n);
    a+=abs(2*cos(r));
  }

  endShape();
  fill(#FBFCB8);
  beginShape();
  for (float r=PI/180; r<=TAU; r+=PI/180) {
    noi_n=abs(noise(a*0.009, r*0.05)*1.2);
    vertex(20*cos(r)*noi_n+10, 20*sin(r)*noi_n+20);
    a+=abs(2*cos(r));
  }

  endShape();
  fill(#C6FCB8);
  beginShape();
  for (float r=PI/180; r<=TAU; r+=PI/180) {
    noi_n=abs(noise(a*0.009, r*0.05)*1.2);
    vertex(20*cos(r)*noi_n-10, 20*sin(r)*noi_n+20);
    a+=abs(2*cos(r));
  }

  endShape();
  pop();
}
float fx=0;
float fy=0;
void momo(float x, float y) {
  strokeWeight(0.5);
  stroke(0);
  fill(#FFE3F4);
  push();
  translate(x+50, y+50);
  beginShape();
  for (float r=0; r<=TAU; r+=PI/180) {
    fx=50*cos(r)*(sin(4*r)+0.25*sin(12*r)+0.12*sin(20*r)+0.07*sin(28*r)*noise(r, r));
    fy=50*sin(r)*(sin(4*r)+0.25*sin(12*r)+0.12*sin(20*r)+0.07*sin(28*r));
    vertex(fx, fy);
  }
  endShape();
  pop();
}

void tetex(float x, float y) {
  push();
  translate(x, y);
  fill(#FCC7D5);
  textSize(random(60, 80));
  text("桃", 0, 0);
  textSize(random(60, 80));
  fill(#8197FF);
  text("の", 200, 100);
  textSize(random(60, 80));
  fill(random(255), random(255), random(255));
  text("節", 100, 200);
  textSize(random(60, 80));
  fill(random(255), random(255), random(255));
  text("句", 200, 300);
  pop();
}

void keyPressed() {
  if (key==ENTER) saveFrame("aaa1.png");
}
